(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const c of o.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&i(c)}).observe(document,{childList:!0,subtree:!0});function n(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(e){if(e.ep)return;e.ep=!0;const o=n(e);fetch(e.href,o)}})();const d={method:"GET",body:null,headers:{"Content-Type":"application/json","Access-Control-Allow-Origin":"*"}},s=async r=>{const{url:t,...n}={...d,...r,headers:{...d.headers,...r.headers}},i=await fetch(t,n);return i.ok&&(i.data=await i.json()),i};s.get=(r,t)=>s({url:r,...t});s.post=(r,t,n)=>s({method:"POST",url:r,body:JSON.stringify(t),...n});s.delete=(r,t)=>s({method:"DELETE",url:r,...t});s.put=(r,t,n)=>s({method:"PUT",url:r,body:JSON.stringify(t),...n});export{s as t};
